"use strict";
/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.setNpmrc = exports.deprecate = exports.getPackage = exports.renderDeprecations = exports.publish = void 0;
var get_pkg_1 = __importDefault(require("@semantic-release/npm/lib/get-pkg"));
var get_registry_1 = __importDefault(require("@semantic-release/npm/lib/get-registry"));
var set_npmrc_auth_1 = __importDefault(require("@semantic-release/npm/lib/set-npmrc-auth"));
var lodash_1 = require("lodash");
var child_process_1 = require("child_process");
var tempy_1 = __importDefault(require("tempy"));
var npmrc = tempy_1["default"].file({ name: ".npmrc" });
function publish(_a, context) {
    var _b = _a.deprecations, deprecations = _b === void 0 ? [] : _b;
    return __awaiter(this, void 0, void 0, function () {
        var pkg, registry;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0: return [4 /*yield*/, (0, exports.getPackage)(context)];
                case 1:
                    pkg = _c.sent();
                    // get deprecations from package.json deprecations field
                    deprecations = __spreadArray(__spreadArray([], deprecations, true), (pkg.deprecations || []), true);
                    // short circuit if there are no deprecations
                    if (deprecations.length === 0) {
                        return [2 /*return*/];
                    }
                    return [4 /*yield*/, (0, get_registry_1["default"])(pkg, context)];
                case 2:
                    registry = _c.sent();
                    return [4 /*yield*/, (0, exports.setNpmrc)(npmrc, registry, context)];
                case 3:
                    _c.sent();
                    deprecations = (0, exports.renderDeprecations)(deprecations, context);
                    deprecations.forEach(function (deprecation) {
                        return (0, exports.deprecate)(deprecation, pkg.name, npmrc, registry, context);
                    });
                    return [2 /*return*/];
            }
        });
    });
}
exports.publish = publish;
var renderDeprecations = function (deprecations, context) {
    return deprecations.map(function (_a) {
        var version = _a.version, message = _a.message;
        return ({
            version: (0, lodash_1.template)(version)(__assign({}, context)),
            message: (0, lodash_1.template)(message)(__assign({}, context))
        });
    });
};
exports.renderDeprecations = renderDeprecations;
var getPackage = function (context) { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {
    return [2 /*return*/, (0, get_pkg_1["default"])({}, context)];
}); }); };
exports.getPackage = getPackage;
var deprecate = function (_a, name, npmrc, registry, context) {
    var version = _a.version, message = _a.message;
    var command = "npm deprecate --userconfig ".concat(npmrc, " --registry ").concat(registry, " ").concat(name, "@\"").concat(version, "\" \"").concat(message, "\"");
    /* istanbul ignore next */
    (0, child_process_1.execSync)(command, {
        stdio: "inherit"
    });
    context.logger.log("Completed call to: ".concat(command));
};
exports.deprecate = deprecate;
var setNpmrc = function (npmrc, registry, context) { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, (0, set_npmrc_auth_1["default"])(npmrc, registry, context)];
            case 1:
                _a.sent();
                return [2 /*return*/];
        }
    });
}); };
exports.setNpmrc = setNpmrc;
